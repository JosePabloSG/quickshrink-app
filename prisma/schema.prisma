generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["driverAdapters"]
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model Urls {
    id          String     @id @default(cuid())
    url         String
    shortUrl        String     @unique
    createdAt   DateTime   @default(now())
    createdBy   User?      @relation(fields: [creatorId], references: [id], onDelete: Cascade)
    creatorId   String
    clicks      Int        @default(0)
    lastClicked DateTime?
    tags        UrlTags[]

    @@index(shortUrl)
    @@index([creatorId])
}

model Tags {
    id        String     @id @default(cuid())
    name      String
    createdAt DateTime   @default(now())
    createdBy User?      @relation(fields: [creatorId], references: [id])
    creatorId String
    urls      UrlTags[]

    @@index([creatorId])
}

model UrlTags {
    url   Urls  @relation(fields: [urlId], references: [id], onDelete: Cascade)
    urlId String
    tag   Tags  @relation(fields: [tagId], references: [id], onDelete: Cascade)
    tagId String

    @@id([urlId, tagId])
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? 
    access_token      String? 
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id                    String                 @id @default(cuid())
    name                  String?
    username              String?
    email                 String?                @unique
    emailVerified         DateTime?
    image                 String?
    password              String?
    limitUrl              Int                    @default(30)
    accounts              Account[]
    sessions              Session[]
    urls                  Urls[]
    tags                  Tags[]
}
